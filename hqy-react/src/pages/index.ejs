<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no" name="viewport">
		<% if (process.env.NODE_ENV === 'production') { %>
		<script>
		!(function(designWidth){var win=window;var nav=win.navigator;var doc=win.document;var docEl=doc.documentElement;var metaEl=doc.querySelector('meta[name="viewport"]');designWidth=designWidth||750;var dpr=0;var scale=0;var tid;if(metaEl){console.warn("将根据已有的meta标签来设置缩放比例");var match=metaEl.getAttribute("content").match(/initial\-scale=([\d\.]+)/);if(match){scale=parseFloat(match[1]);dpr=parseInt(1/scale)}}else{var isAndroid=nav.appVersion.match(/android/gi);var isIPhone=nav.appVersion.match(/(iphone|ipad|ipod)/gi);var devicePixelRatio=win.devicePixelRatio;if(isIPhone){if(devicePixelRatio>=3&&(!dpr||dpr>=3)){dpr=3}else{if(devicePixelRatio>=2&&(!dpr||dpr>=2)){dpr=2}else{dpr=1}}}else{dpr=1}scale=1/dpr}docEl.setAttribute("data-dpr",dpr);if(dpr>1){docEl.setAttribute("data-scale",true)}if(!metaEl){metaEl=doc.createElement("meta");metaEl.setAttribute("name","viewport");metaEl.setAttribute("content","initial-scale="+scale+", maximum-scale="+scale+", minimum-scale="+scale+", user-scalable=no");if(docEl.firstElementChild){docEl.firstElementChild.appendChild(metaEl)}else{var wrap=doc.createElement("div");wrap.appendChild(metaEl);doc.write(wrap.innerHTML)}}function refreshRem(){var width=docEl.getBoundingClientRect().width;if(width/dpr>540){width=540*dpr}var rem=width*100/designWidth;docEl.style.fontSize=rem+"px"}win.addEventListener("resize",function(){clearTimeout(tid);tid=setTimeout(refreshRem,300)},false);win.addEventListener("pageshow",function(e){if(e.persisted){clearTimeout(tid);tid=setTimeout(refreshRem,300)}},false);if(doc.readyState==="complete"){doc.body.style.fontSize=16*dpr+"px"}else{doc.addEventListener("DOMContentLoaded",function(e){doc.body.style.fontSize=16*dpr+"px"},false)}refreshRem()})
		(750);
		</script>
		<% } else { %>
		<script>
			!(function (designWidth) {
				var win = window;
				var nav = win.navigator;
				var doc = win.document;
				var docEl = doc.documentElement;
				var metaEl = doc.querySelector('meta[name="viewport"]');
				designWidth = designWidth || 750;
				var dpr = 0;
				var scale = 0;
				var tid;

				if (metaEl) {
					console.warn('将根据已有的meta标签来设置缩放比例');
					var match = metaEl.getAttribute('content').match(/initial\-scale=([\d\.]+)/);
					if (match) {
						scale = parseFloat(match[1]);
						dpr = parseInt(1 / scale);
					}
				} else {
					var isAndroid = nav.appVersion.match(/android/gi);
					var isIPhone = nav.appVersion.match(/(iphone|ipad|ipod)/gi);
					var devicePixelRatio = win.devicePixelRatio;
					if (isIPhone) {
						// iOS下，对于2和3的屏，用2倍的方案，其余的用1倍方案
						if (devicePixelRatio >= 3 && (!dpr || dpr >= 3)) {
							dpr = 3;
						} else if (devicePixelRatio >= 2 && (!dpr || dpr >= 2)){
							dpr = 2;
						} else {
							dpr = 1;
						}
					} else {
						// 其他设备下，仍旧使用1倍的方案
						dpr = 1;
					}
					scale = 1 / dpr;
				}

				docEl.setAttribute('data-dpr', dpr);
				if (dpr > 1) {
					docEl.setAttribute('data-scale', true);
				}

				if (!metaEl) {
					metaEl = doc.createElement('meta');
					metaEl.setAttribute('name', 'viewport');
					metaEl.setAttribute('content', 'initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');
					if (docEl.firstElementChild) {
						docEl.firstElementChild.appendChild(metaEl);
					} else {
						var wrap = doc.createElement('div');
						wrap.appendChild(metaEl);
						doc.write(wrap.innerHTML);
					}
				}

				function refreshRem() {
					var width = docEl.getBoundingClientRect().width;

					if (width / dpr > 540) {
						width = 540 * dpr;
					}
					var rem = width * 100 / designWidth;
					docEl.style.fontSize = rem + 'px';
				}

				win.addEventListener('resize', function () {
					clearTimeout(tid); //防止执行两次
					tid = setTimeout(refreshRem, 300);
				}, false);
				win.addEventListener('pageshow', function (e) {
					if (e.persisted) { // 浏览器后退的时候重新计算
						clearTimeout(tid);
						tid = setTimeout(refreshRem, 300);
					}
				}, false);

				if (doc.readyState === 'complete') {
					doc.body.style.fontSize = 16 * dpr + 'px';
				} else {
					doc.addEventListener('DOMContentLoaded', function (e) {
						doc.body.style.fontSize = 16 * dpr + 'px';
					}, false);
				}

				refreshRem();
			})(750);
		</script>
		<% } %>

		<title><%= htmlWebpackPlugin.options.title %></title>
	</head>
	<body>
		<div id="root"></div>
		<!-- built files will be auto injected -->
	</body>
</html>
